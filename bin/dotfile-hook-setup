#!/bin/bash

DOTFILE_DIR="$HOME/.dotfiles"

# Location of git hooks for the dotfiles repository
HOOK_DIR="$DOTFILE_DIR/.git/hooks"

# List of every hook name that I know about
HOOK_NAMES=( applypatch-msg pre-applypatch post-applypatch pre-commit
             prepare-commit-msg commit-msg post-commit pre-rebase post-checkout
             post-merge pre-receive update post-receive post-update pre-auto-gc
           )

# This performs the actual hook installation
for HOOK in ${HOOK_NAMES[@]}; do
    echo "\tInstalling git hook $HOOK"

    # If the hook already exists, is executable, and is not a symlink
    # then backup the hook as a .local file for execution by the hook-wrapper
    # no one looses anything and everything gets run. Perfect.
    if [ ! -h $HOOK_DIR/$HOOK -a -x $HOOK_DIR/$HOOK ]; then
        mv $HOOK_DIR/$HOOK $HOOK_DIR/$HOOK.local
    fi

    # Create a symlink, over-writing the file if it exists, this
    # is mostly a safety trick for older versions of git that had the
    # sample hooks match the hook name and just didn't have them executable
    ln -s -f $DOTFILE_DIR/bin/hooks-wrapper $HOOK_DIR/$HOOK
done

